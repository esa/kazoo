@@-- The following tags are available in this template:
@@--
@@-- @_Nodes_@               : Code generated for the nodes
@@-- @_Node_Names_@          : Vector Tag of node names
@@-- @_Node_CPU_@            :  |_ Corresponding CPU name (eg x86_linux)
@@-- @_Node_CPU_Classifier_@ :  |_ CPU Classifier (ocarina...::x86_linux)
@@-- @_Partition_Names_@     : Vector Tag of partition names
@@-- @_Partition_Node_@      :  |_ Corresponding node name
@@-- @_Partition_CPU_@       :  |_ Corresponding CPU name
@@-- @_Partition_VP_@        :  |_ Virtual processor binding (TSP only)
@@-- @_Threads_@             : Code generated for the threads
@@-- @_Thread_Names_@        : List of all threads in the complete system
@@-- @_Target_Packages_@     : List of all target package names in the complete system
@@-- And all the system configuration obtained from the command line:
@@-- Interface_View, Deployment_View, Data_View, Binary_Path, Check_Data_View,
@@-- Output_Dir, Skeletons, Glue, Use_POHIC, Timer_Resolution, Debug_Flag,
@@-- No_Stdlib_Flag, Timer_Resolution, Other_Files (list of aadl files)

--  Input file for the taste orchestrator: do not edit
--  This file was generated automatically by taste/kazoo
@_Threads_@

package Process_Package
public
   with arinc653;
   with Deployment;
   with DataView;
   with interfaceview::IV;
   with deploymentview::DV;
@@-- Add "with" of the node, this is at least needed for TSP systems
@@TABLE@@
   with deploymentview::DV::@_Node_Names_@;
@@END_TABLE@@
@@TABLE@@
   with @_CAPITALIZE:Thread_Names_@_Thread;
@@END_TABLE@@
@@TABLE@@
   with @_CAPITALIZE:Target_Packages_@;
@@END_TABLE@@

@@-- POHIC-only: declare protected objects to have runtime mutex
@@-- @@IF@@ @_Use_POHIC_@
data Taste_Protected
properties
   Concurrency_Control_Protocol => Protected_Access;
end Taste_Protected;

data implementation Taste_Protected.Object
properties
   Concurrency_Control_Protocol => Protected_Access;
end Taste_Protected.Object; 
@@-- @@END_IF@@

@_Nodes_@

system DeploymentView
end DeploymentView;

system implementation DeploymentView.final
subcomponents
@@TABLE'ALIGN_ON(":")@@
@@-- First declare the partitions
   @_CAPITALIZE:Partition_Names_@ : process @_CAPITALIZE:Partition_Names_@.final;
@@END_TABLE@@
@@-- Then the processor boards (they may contain several virtual processors for TSP systems) and optionally memory
@@TABLE'ALIGN_ON(":")@@
   @_CAPITALIZE:Node_Names_@_@_Node_CPU_@ : processor @_CAPITALIZE:Node_Names_@_Board.final;
@@IF@@ @_Node_Has_Memory_@
   @_CAPITALIZE:Node_Names_@_Memory : memory deploymentview::DV::@_CAPITALIZE:Node_Names_@::main_memory.others;
@@END_IF@@
@@END_TABLE@@
@@-- Then specify the bindings of the partitions to (virtual) processors
properties
@@TABLE'ALIGN_ON("applies")@@
@@-- Check if this is a TSP system, in which case bind the partitions to the corresponding virtual processor of the node
@@IF@@ @_Partition_VP_@ = ""
   Actual_Processor_Binding => (reference (@_CAPITALIZE:Partition_Node_@_@_Partition_CPU_@)) applies to @_CAPITALIZE:Partition_Names_@;
@@ELSE@@
   Actual_Processor_Binding => (reference (@_CAPITALIZE:Partition_Node_@_@_Partition_CPU_@.@_Partition_VP_@)) applies to @_CAPITALIZE:Partition_Names_@;
   Actual_Memory_Binding    => (reference (@_CAPITALIZE:Partition_Node_@_Memory.@_CAPITALIZE:Partition_Names_@_Segment)) applies to @_CAPITALIZE:Partition_Names_@;
@@END_IF@@
@@END_TABLE@@
end DeploymentView.final;

end Process_Package;

-- deploymenttview.final
