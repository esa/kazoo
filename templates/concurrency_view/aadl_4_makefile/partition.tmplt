@@-- The up to date list of tags available for this template is available here:
@@-- https://taste.tuxfamily.org/wiki/index.php?title=Kazoo_Templates_Documentation#templates.2Fconcurrency_view.2Fsub.2Fpartition.tmplt
@@-- If you are using vim, go over the URL and pres gx in to follow the link
@@-- If you have no internet access you can also use (with vim) Ctrl-W-f or gf in vim to open the text doc:
@@-- $HOME/tool-inst/share/kazoo/doc/templates_concurrency_view_sub_partition.ascii
#  Build of partition @_Name_@ (common to all targets)
# (rule generated by templates/concurrency_view/aadl_4_makefile/partition.tmplt)
@_LOWER:Name_@:	@_REPLACE_ALL(,/ ):LOWER:Block_Names_@
  @@-- Opengeode generate intermediate ASN.1 files, they must be compiled
  @@-- (at partition level, not shared by all nodes)
  @@-- The code below is needed because if there is more than one instance of
  @@-- a component type, opengeode will generate the _datamodel.asn file in
  @@-- the folder of the instance, i.e. there may be more than one reference
  @@-- to the same file generated at different places The python code checks
  @@-- that when this happens only one _datamodel.asn file is kept to avoid
  @@-- an error that would otherwise be raised by asn2dataModel
  @@INLINE(	args=$$\(python3 -c "import os, sys; print\(' '.join\({os.path.basename\(f\):f for f in sys.argv[1:]}.values\(\)\)\)" )( )(\); \\\n	mkdir -p ..\/dataview\/Ada; find $$args && asn2dataModel -toAda -allboards -o ..\/dataview\/Ada $$args || echo 'Ignore this error if you are using the OpenGEODE C Backend')@@
    @@TABLE@@
       @@IF@@ @_Block_Languages_@ = SDL
          @@--  Use wildcard because in the case of the SDL to C backend the _datamodel files are not generated (yet)
          @@IF@@ @_Block_Instance_Of_@ = ""
             ${wildcard ../@_LOWER:Block_Names_@/SDL/code/@_LOWER:Block_Names_@_datamodel.asn}
          @@ELSE@@
             ${wildcard ../@_LOWER:Block_Names_@/SDL/code/@_LOWER:Block_Instance_Of_@_datamodel.asn}
          @@END_IF@@
       @@END_IF@@
    @@END_TABLE@@
  @@END_INLINE@@

# Build of partition @_Name_@ for RTEMS (generate adainit)
# (rule generated by templates/concurrency_view/aadl_4_makefile/partition.tmplt)
@_LOWER:Name_@_rtems_ada : @_LOWER:Name_@
@@-- On RTEMS if using POHIC we need to have adainit created for Ada functions
	mkdir -p @_LOWER:Name_@_adainit && \
@@INLINE(    echo ')()()@@
   @@TABLE@@
      @@IF@@ @_Block_Languages_@ = SDL or @_Block_Languages_@ = Ada
         with @_CAPITALIZE:Block_Names_@;
      @@END_IF@@
   @@END_TABLE@@
   package adainit is end adainit;' >@_LOWER:Name_@_adainit/tasteada.ads && \
@@END_INLINE@@
        cd @_LOWER:Name_@_adainit && \
@@INLINE(    )(:)( \\)@@
   ADA_INCLUDE_PATH=../../dataview/Ada/src:../../dataview/Ada/asn1rtl:../../dataview/Ada/boards/x86
   @@TABLE'TERSE@@
      @@IF@@ @_Block_Languages_@ = SDL
         ../../@_LOWER:Block_Names_@/SDL/code
      @@ELSIF@@ @_Block_Languages_@ = Ada
         ../../@_LOWER:Block_Names_@/Ada/src
      @@END_IF@@
   @@END_TABLE@@
@@END_INLINE@@
sparc-rtems5-gnatmake -c tasteada.ads && sparc-rtems5-gnatbind -t -n tasteada.ali -o ada-start.adb && mkdir -p ../@_LOWER:Node_Name_@/ada_code_startup && mv ada-start.* ../@_LOWER:Node_Name_@/ada_code_startup

@_Blocks_@
