@@-- The following tags are available in this template:
@@--
@@-- @_Name_@            : Partition name (usually the name of the binary)
@@-- @_Threads_@         : Code generated for the threads
@@-- @_Thread_Names_@    : Tag: list of thread names
@@-- @_Node_Name_@       : Name of the node containing this partition
@@-- @_Blocks_@          : Code generated for protected functions
@@-- @_Block_Names@      : Vector Tag: list of block (user functions) names
@@-- @_Block_Languages@  :   |_ Corresponding implementation language
@@-- @_Coverage_@        : True if user requested code coverage enable
@@-- @_Package_Name_@    : AADL Package name for the target (e.g. ocarina_porocessors_x86)
@@-- @_CPU_Name_@        : CPU Name (e.g. x86_linux)
@@-- @_CPU_Platform_@    : AADL CPU_Platform (e.g. PLATFORM_NATIVE)
@@-- @_CPU_Classifier_@  : AADL CPU Classifier (e.g. ocarina_processors_x86::x86.linux)
@@-- @_VP_Name_@         : Virtual processor name on which the partition is bounded
@@-- @_VP_Platform_@     : Virtual processor platform (e.g. PLATFORM_AIR)
@@-- @_VP_Classifier_@   : Virtual processor classifier
@@-- @_Ada_Runtime_@     : Set if CPU_Platform = PLATFORM_GNAT_RUNTIME
@@-- @_Bound_Functions_@ : List of user functions from Interface view
@@-- @_Thread_Src_Name_@ : Vector tag : connection thread name (source)
@@-- @_Thread_Dst_Name_@ : Vector tag : connection thread name (dest)
@@-- @_Thread_Src_Port_@ : Vector tag : connection port name (source)
@@-- @_Thread_Dst_Port_@ : Vector tag : connection port name (dest)
@@-- @_In_Port_Names_@        : Vector tag: input ports of the partition
@@-- @_In_Port_Thread_Name_@  :     |_ corresponding thread inside the partition
@@-- @_In_Port_Type_Name_@    :     |_ corresponding parameter type name (optional)
@@-- @_Out_Port_Names_@       : Vector tag: output ports of the partition
@@-- @_Out_Port_Thread_Name_@ :     |_ corresponding thread inside the partition
@@-- @_Out_Port_Type_Name_@   :     |_ corresponding parameter type name (optional)
--  Node name          : @_Name_@
--  Execution platform : @_CPU_Platform_@
@@IF@@ @_CPU_Platform_@ = "PLATFORM_GNAT_RUNTIME"
--  Ada runtime        : @_Ada_Runtime_@
--  CPU Classifier     : @_CPU_Classifier_@
@@END_IF@@

@@-- Not all systems use Ada so we must not always include Ada dataview folder
@@TABLE@@
@@IF@@ @_LOWER:Block_Languages_@ = sdl or @_LOWER:Block_Languages_@ = ada
@@SET@@ Need_Ada = TRUE
@@END_IF@@
@@END_TABLE@@
@@IF@@ @_CPU_Platform_@ = "PLATFORM_GNAT_RUNTIME"
with "@_Ada_Runtime_@";
@@END_IF@@
--  with "polyorb_hi";
with "/home/taste/tool-inst/include/ocarina/runtime/polyorb-hi-ada/polyorb_hi";

project @_CAPITALIZE:Name_@ is
   --  following to be updated with all relevant source dirs
   for Source_Dirs use
      ("@_LOWER:Name_@",
       "/home/taste/tool-inst/include/ocarina/runtime/polyorb-hi-ada",
       "../../dataview/C",
@@IF@@ @_Need_Ada_@ = TRUE
       "../../dataview/Ada",
@@END_IF@@
@@IF@@ @_VP_Name_@ = "" and (@_In_Port_Names'Length_@ > 0 or @_Out_Port_Names'Length_@ > 0)
@@-- Detect distributed systems (no virtual processor) - add DriversConfig folder
       "../DriversConfig",
@@END_IF@@ 
@@TABLE@@
@@IF@@ @_Block_Languages_@ = SDL
       "../../@_LOWER:Block_Names_@/SDL/code",
@@ELSE@@
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/src",
@@END_IF@@
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/wrappers",
@@END_TABLE@@
       "../deploymentview_final/@_LOWER:Name_@")
        & external_as_list("EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("ADA_INCLUDE_PATH", ":");

   for Object_Dir use "obj_ada";
   for Exec_Dir   use "../../binaries";

   for Languages use ("Ada", "C");
@@IF@@ @_CPU_Platform_@ = "PLATFORM_GNAT_RUNTIME"
   for Target use @_Ada_Runtime_@'Target;
   for Runtime ("Ada") use @_Ada_Runtime_@'Runtime ("Ada");
@@END_IF@@

   for Main use ("@_LOWER:Name_@.adb");

   package Naming is
      --  Custom middleware file names
     @@IF@@ @_CPU_Platform_@ = "PLATFORM_GNAT_RUNTIME"
      for Body ("PolyORB_HI.Output_Low_Level") use "polyorb_hi-output_low_level_gnatruntime.adb";
     @@ELSE@@
      for Body ("PolyORB_HI.Output_Low_Level") use "polyorb_hi-output_low_level_native.adb";
     @@END_IF@@
   end Naming;

   package Compiler renames PolyORB_HI.Compiler;
   package Builder renames PolyORB_HI.Builder;
   package Binder renames PolyORB_HI.Binder;
   package Linker renames PolyORB_HI.Linker;
   package Check renames PolyORB_HI.Check;
   package Prove renames PolyORB_HI.Prove;
   
end @_CAPITALIZE:Name_@;


