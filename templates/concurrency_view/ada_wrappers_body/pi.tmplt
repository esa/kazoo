@@-- The following tags are available in this template:
@@--
@@-- @_Name_@                : The name of the interface
@@-- @_Direction_@           : "PI" or "RI"
@@-- @_Kind_@                : The RCM Kind
@@-- @_Parent_Function_@     : The name of the function
@@-- @_Param_Names_@         : List of parameter names
@@-- @_Param_Types_@         :   |_ Corresponding parameter types
@@-- @_Param_Directions_@    :   |_ Corresponding direction
@@IF@@ @_Param_Names'Length_@ > 0
procedure @_CAPITALIZE:Name_@
@@INLINE(   \()(;\n    )(\) is\n)@@
   @@TABLE'ALIGN_ON(":")@@
      @_CAPITALIZE:Param_Names_@ : Interfaces.C.char_array; @_CAPITALIZE:Param_Names_@_Size : Integer
   @@END_TABLE@@
@@END_INLINE@@
   procedure C_@_CAPITALIZE:Name_@
   @@INLINE(      \()(;\n       )(\)\n)@@
      @@TABLE'ALIGN_ON(":")@@
         @_CAPITALIZE:Param_Names_@ : Interfaces.C.char_array; @_CAPITALIZE:Param_Names_@_Size : Integer
      @@END_TABLE@@
   @@END_INLINE@@
     with Import, Convention => C, Link_Name => "@_LOWER:Parent_Function_@_@_LOWER:Name_@";
begin
   @@-- Works only for one param: for more than one param, use a table section
   C_@_CAPITALIZE:Name_@ (@_CAPITALIZE:Param_Names_@, @_CAPITALIZE:Param_Names_@_Size);
end @_CAPITALIZE:Name_@;
@@ELSE@@
procedure @_CAPITALIZE:Name_@ is
   procedure C_@_CAPITALIZE:Name_@
     with Import, Convention => C, Link_Name => "@_LOWER:Parent_Function_@_@_LOWER:Name_@";
begin
   --  PI has no parameter - could directly call user code (add _PI_ above)
   C_@_CAPITALIZE:Name_@;
end @_CAPITALIZE:Name_@;

@@END_IF@@
