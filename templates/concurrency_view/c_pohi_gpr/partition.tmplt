@@-- The up to date list of tags available for this template is available here:
@@-- https://taste.tuxfamily.org/wiki/index.php?title=Kazoo_Templates_Documentation#templates.2Fconcurrency_view.2Fsub.2Fpartition.tmplt
@@-- If you are using vim, go over the URL and pres gx in to follow the link
@@-- If you have no internet access you can also use (with vim) Ctrl-W-f or gf in vim to open the text doc:
@@-- $HOME/tool-inst/share/kazoo/doc/templates_concurrency_view_sub_partition.ascii
--  Node name          : @_Name_@
--  Execution platform : @_CPU_Platform_@
project @_CAPITALIZE:Name_@ is

   type Build_Type is ("Debug", "Release");
   Build : Build_Type := external ("CFG", "Debug");

@@-- Not all systems use Ada so we must not always include Ada dataview folder
@@TABLE@@
@@IF@@ @_Block_Languages_@ = SDL or @_Block_Languages_@ = Ada
@@SET@@ Need_Ada = TRUE
@@END_IF@@
@@END_TABLE@@
@@--
   --  following to be updated with all relevant source dirs
   for Source_Dirs use
      ("@_LOWER:Name_@",
@@IF@@ @_VP_Name_@ = "" and (@_In_Port_Names'Length_@ > 0 or @_Out_Port_Names'Length_@ > 0)
@@-- Detect distributed systems (no virtual processor) - add DriversConfig folder
       "../DriversConfig",
@@END_IF@@ 
       "../deploymentview_final/polyorb-hi-c/src",
       "../deploymentview_final/polyorb-hi-c/include",
       "../../dataview/C",
@@IF@@ @_Need_Ada_@ = TRUE
       "../../dataview/Ada/asn1rtl",
       "../../dataview/Ada/src",
       "../../dataview/Ada/boards/x86", -- Additional tests may be needed if other platforms are used
@@END_IF@@
@@TABLE@@
@@IF@@ @_Block_Languages_@ = SDL
       "../../@_LOWER:Block_Names_@/SDL/code",
       "../../@_LOWER:Block_Names_@/SDL/wrappers",
@@ELSE@@
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/src",
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/wrappers",
@@END_IF@@
@@--  Instances: Add the folder of the parent function (in C++ and Ada)
@@--  (choose the right path if parent is a shared library)
@@IF@@ @_EXIST:Block_Instance_Of_@ and (@_Block_Languages_@ = CPP or @_Block_Languages_@ = Ada)
  @@IF@@ not @_Block_Is_Shared_Type_@
       "../../@_LOWER:Block_Instance_Of_@/@_Block_Languages_@/src",
  @@ELSE@@
       "@_Shared_Lib_Dir_@/@_LOWER:Block_Instance_Of_@/@_LOWER:Block_Instance_Of_@/@_Block_Languages_@/src",
  @@END_IF@@
@@END_IF@@
@@END_TABLE@@
       "../deploymentview_final/@_LOWER:Name_@")
        & external_as_list("EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("@_UPPER:Name_@_EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("ADA_INCLUDE_PATH", ":");

   for Object_Dir use "obj";
   for Exec_Dir   use "../../binaries";

@@IF@@ @_Need_Ada_@ = TRUE
   for Languages use ("Ada", "C", "C++");
@@ELSE@@
   for Languages use ("C", "C++");
@@END_IF@@

   for Main use ("main.c");

   package Naming is
       for Body_Suffix ("C++") use ".cc";
   end Naming;

   --  These files are not needed to use POHIC: don' t compile them
   for Excluded_Source_Files use
      ("config.c",
@@IF@@ @_In_Port_Names'Length_@ = 0 and @_Out_Port_Names'Length_@ = 0 and @_Thread_Src_Port'Length_@ = 0
       "po_hi_gqueue.c",
       "po_hi_transport.c",
       "po_hi_marshallers.c", 
       "po_hi_semaphore.c",
       "po_hi_monitor.c",
       "po_hi_driver_drvmgr_common.c",
       "po_hi_driver_linux_serial.c",
       "po_hi_driver_serial_common.c",
       "po_hi_driver_sockets.c",
       "marshallers.c",  -- only for distributed systems
@@END_IF@@
       "config_leon3_drvmgr.c",
       "config_leon4_n2x.c",
       "grspw_api.c",
       "grspw_pkt_lib.c",
       "po_hi_driver_exarm.c",
       "po_hi_driver_exarm_ni_6071e_analog.c",
       "po_hi_driver_exarm_ni_6071e_digital.c",
       "po_hi_driver_keyboard.c",
       "po_hi_driver_leon_eth.c",
       "po_hi_driver_leon_serial.c",
       "po_hi_driver_rasta_1553_brmlib.c",
       "po_hi_driver_rasta_1553.c",
       "po_hi_driver_rasta_common.c",
       "po_hi_driver_rasta_serial.c",
       "po_hi_driver_rasta_spacewire.c",
       "po_hi_driver_rtems_drvmgr_ethernet.c",
       "po_hi_driver_rtems_drvmgr_serial.c",
       "po_hi_driver_rtems_drvmgr_spacewire.c",
       "po_hi_driver_rtems_ne2000.c",
       "po_hi_driver_stardundee.c",
       "po_hi_driver_usbbrick_spacewire.c",
       "po_hi_driver_xc4v_fpga.c",
       "po_hi_giop.c",
       "po_hi_gprof_rtems_leon.c",
       "po_hi_lua.c",
       "po_hi_simulink.c",
       "po_hi_storage.c",
       "spwrouter_custom_config.c",
       "star_dundee_api.c",
       "trace_manager.c",
       "um_threads.c",
       "cheddar_schedule.cc",
       "remote_configuration.cc");

   package Compiler is
      for Driver ("C") use External ("CC", "gcc");
      for Driver ("C++") use External ("CXX", "g++");

      Common_C_Switches :=
        ("-DTARGET=native",
         "-DPOSIX",
         "-D_POSIX_SOURCE",
         "-D_GNU_SOURCE",
         "-Wall",
         "-Wextra",
         "-fdiagnostics-show-option",
         "-Wcast-align",
         "-fdata-sections",
         "-ffunction-sections",
         "-fdiagnostics-color=always",
         "-Wno-cast-function-type",
         "-Wmissing-prototypes",
@@IF@@ @_Coverage_@
         "-fprofile-arcs",
         "-ftest-coverage",
         "-DCOVERAGE",
@@END_IF@@
         "-Wswitch")
         & External_As_List ("@_UPPER:Name_@_USER_CFLAGS", " ")
         & External_As_List ("USER_CFLAGS", " ");

      Common_Ada_Switches :=
        ("-Wall",
         "-Wextra",
         "-fdata-sections",
         "-ffunction-sections",
         "-gnatd.E")   -- this flag allows to have an IN and IN OUT parameter with the same variable
         & External_As_List ("@_UPPER:Name_@_USER_ADAFLAGS", " ")
         & External_As_List ("USER_ADAFLAGS", " ");

      case Build is
         when "Release" =>
            for Default_Switches ("C")   use Common_C_Switches   & ("-O2", "-DNDEBUG");
            for Default_Switches ("C++") use Common_C_Switches   & ("-O2", "-DNDEBUG");
            for Default_Switches ("Ada") use Common_Ada_Switches & ("-O2", "-DNDEBUG");
         when "Debug" =>
            for Default_Switches ("C")   use Common_C_Switches   & ("-g", "-O0", "-D__PO_HI_USE_VCD=1");
            for Default_Switches ("C++") use Common_C_Switches   & ("-g", "-O0");
            for Default_Switches ("Ada") use Common_Ada_Switches & ("-g", "-O0");
      end case;
      --  Increase command line size to avoid using --specs and support ccache
      --  Comment the line if you are using an old version of gprbuild, eg. in Debian 9
      for Max_Command_Line_Length use "131072";
   end Compiler;

   package Linker is
      Common_LD_Switches :=
         ("-g",
          "-lrt",
          "-lpthread",
          "-lm",
@@IF@@ @_Coverage_@
          "-fprofile-arcs",
          "-ftest-coverage",
          "-lgcov",
@@END_IF@@
          "-Wl,-gc-sections")
          & external_as_list("@_UPPER:Name_@_USER_LDFLAGS", " ")
          & external_as_list("USER_LDFLAGS", " ");

      case Build is
         when "Release" =>
            for Default_Switches ("C") use Common_LD_Switches;
            for Default_Switches ("C++") use Common_LD_Switches;
         when "Debug" =>
            for Default_Switches ("C") use Common_LD_Switches & "-g";
            for Default_Switches ("C++") use Common_LD_Switches & "-g";
      end case;
   end Linker;

   package Builder is
      for Executable ("main.c") use "@_Name_@";
   end Builder;
   
end @_CAPITALIZE:Name_@;


