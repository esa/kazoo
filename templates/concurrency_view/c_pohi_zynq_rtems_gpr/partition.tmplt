@@-- The following tags are available in this template:
@@--
@@-- @_Name_@            : Partition name (usually the name of the binary)
@@-- @_Threads_@         : Code generated for the threads
@@-- @_Thread_Names_@    : Tag: list of thread names
@@-- @_Node_Name_@       : Name of the node containing this partition
@@-- @_Blocks_@          : Code generated for protected functions
@@-- @_Block_Names@      : Vector Tag: list of block (user functions) names
@@-- @_Block_Languages_@ :   |_ Corresponding implementation language
@@-- @_Coverage_@        : True if user requested code coverage enable
@@-- @_Package_Name_@    : AADL Package name for the target (e.g. ocarina_porocessors_x86)
@@-- @_CPU_Name_@        : CPU Name (e.g. x86_linux)
@@-- @_CPU_Platform_@    : AADL CPU_Platform (e.g. PLATFORM_NATIVE)
@@-- @_CPU_Classifier_@  : AADL CPU Classifier (e.g. ocarina_processors_x86::x86.linux)
@@-- @_CPU_Family_@      : e.g. gr740 or x86
@@-- @_CPU_Instance_@    : e.g. rtems51_posix or linux
@@-- @_VP_Name_@         : Virtual processor name on which the partition is bounded
@@-- @_VP_Platform_@     : Virtual processor platform (e.g. PLATFORM_AIR)
@@-- @_VP_Classifier_@   : Virtual processor classifier
@@-- @_Ada_Runtime_@     : Set if CPU_Platform = PLATFORM_GNAT_RUNTIME
@@-- @_Bound_Functions_@ : List of user functions from Interface view
@@-- @_Thread_Src_Name_@ : Vector tag : connection thread name (source)
@@-- @_Thread_Dst_Name_@ : Vector tag : connection thread name (dest)
@@-- @_Thread_Src_Port_@ : Vector tag : connection port name (source)
@@-- @_Thread_Dst_Port_@ : Vector tag : connection port name (dest)
@@-- @_In_Port_Names_@        : Vector tag: input ports of the partition
@@-- @_In_Port_Thread_Name_@  :     |_ corresponding thread inside the partition
@@-- @_In_Port_Type_Name_@    :     |_ corresponding parameter type name (optional)
@@-- @_Out_Port_Names_@       : Vector tag: output ports of the partition
@@-- @_Out_Port_Thread_Name_@ :     |_ corresponding thread inside the partition
@@-- @_Out_Port_Type_Name_@   :     |_ corresponding parameter type name (optional)
--  Node name          : @_Name_@
--  Execution platform : @_CPU_Platform_@ @_CPU_Name_@ @_CPU_Platform_@ @_CPU_Classifier_@ @_Package_Name_@ @_CPU_Family_@ @_CPU_Instance_@
@@IF@@ @_VP_Name_@ = "" and (@_In_Port_Names'Length_@ > 0 or @_Out_Port_Names'Length_@ > 0)
   @@SET@@ Distributed_System = TRUE
@@END_IF@@
@@-- Not all systems use Ada so we must not always include Ada dataview folder
@@TABLE@@
@@IF@@ @_LOWER:Block_Languages_@ = sdl or @_LOWER:Block_Languages_@ = ada
   @@SET@@ Need_Ada = TRUE
@@END_IF@@
@@END_TABLE@@
project @_CAPITALIZE:Name_@_Zynq_RTEMS is

   type Build_Type is ("Debug", "Release");
   Build : Build_Type := external ("CFG", "Debug");

   --  for Create_Missing_Dirs use "True"; (not supported in Debian 9, use -p instead)
   for Object_Dir use "obj_rtems_with_ada";
   for Exec_Dir   use "../../binaries";

@@IF@@ @_Need_Ada_@ = TRUE
   for Languages use ("Ada", "C", "C++");
@@ELSE@@
   for Languages use ("C", "C++");
@@END_IF@@

   for Main use ("main.c");

   package Compiler is
      Common_C_Switches :=
          ("-Wall",
           "-Wextra",
           "-mthumb",
           "-march=armv7-a",
           "-mfpu=neon",
           "-mfloat-abi=hard",
           "-mtune=cortex-a9",
           "-g",
           "-fdiagnostics-show-option",
           "-ffunction-sections",
           "-fdata-sections",
           "-Wcast-align",
           "-Wswitch",
           "-Wmissing-prototypes",
           "-Wimplicit-function-declaration",
@@IF@@ @_Distributed_System_@
           "-D__PO_HI_USE_TRANSPORT",
@@END_IF@@
           "-Wstrict-prototypes",
           "-Wnested-externs",
           "-Wl,-gc-sections");

      case Build is
         when "Release" =>
            for Default_Switches ("C") use Common_C_Switches & ("-O2", "-DNDEBUG")
                & external_as_list("USER_CFLAGS", "");
         when "Debug" =>
            for Default_Switches ("C") use Common_C_Switches & ("-D__PO_HI_USE_VCD=1")
                & external_as_list("USER_CFLAGS", "");
      end case;
   end Compiler;

   package Linker is
      for Default_Switches ("C") use
          external_as_list("USER_LDFLAGS", "");
   end Linker;

   package Builder is
      for Executable_Suffix use ".exe";
      for Executable ("main.c") use "@_Name_@_leon3_rtems";
   end Builder;

   --  following to be updated with all relevant source dirs
   for Source_Dirs use
    ("@_LOWER:Name_@",
        "/opt/rtems-5.1-2019.12.03/arm-rtems5/xilinx_zynq_zc706/lib/include",
@@IF@@ @_Distributed_System_@
      "../deploymentview_final/polyorb-hi-c/include/drivers/configuration",
       "../DriversConfig",
@@END_IF@@
       "../deploymentview_final/polyorb-hi-c/src",
       "../deploymentview_final/polyorb-hi-c/include",
       "../../dataview/C",
@@TABLE@@
@@IF@@ @_LOWER:Block_Languages_@ = sdl
       "../../@_LOWER:Block_Names_@/SDL/code",
       "../../@_LOWER:Block_Names_@/SDL/wrappers",
@@ELSIF@@ @_LOWER:Block_Languages_@ /= simulink
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/src",
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/wrappers",
@@ELSE@@
"../../@_LOWER:Block_Names_@/@_Block_Languages_@/src",
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/wrappers",
@@END_IF@@
@@END_TABLE@@
       "../deploymentview_final/@_LOWER:Name_@")
        & external_as_list("EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("@_UPPER:Name_@_EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("ADA_INCLUDE_PATH", ":");

   --  These files are not needed to use POHIC: don' t compile them
   for Excluded_Source_Files use
      (
@_STRIP:Blocks_@
        "config.c",
       "config_leon4_n2x.c",
       "config_leon3_drvmgr.c",
       "grspw_api.c",
       "grspw_pkt_lib.c",
@@IF@@ not @_Distributed_System_@ and @_Thread_Src_Port'Length_@ = 0
       "po_hi_gqueue.c",
       "po_hi_semaphore.c",
       "po_hi_transport.c",
@@END_IF@@
@@IF@@ not @_Distributed_System_@
       "po_hi_marshallers.c", 
       "marshallers.c",
       "po_hi_driver_leon_eth.c",
       "po_hi_driver_leon_serial.c",
       "po_hi_driver_rtems_drvmgr_ethernet.c",
       "po_hi_driver_rtems_drvmgr_serial.c",
       "po_hi_driver_serial_common.c",
       "po_hi_driver_drvmgr_common.c",
@@END_IF@@
       "po_hi_driver_rtems_drvmgr_spacewire.c",  -- misses an include
       "po_hi_driver_exarm.c",
       "po_hi_driver_exarm_ni_6071e_analog.c",
       "po_hi_driver_exarm_ni_6071e_digital.c",
       "po_hi_driver_keyboard.c",
       "po_hi_driver_linux_serial.c",
       "po_hi_driver_rasta_1553_brmlib.c",
       "po_hi_driver_rasta_1553.c",
       "po_hi_driver_rasta_common.c",
       "po_hi_driver_rasta_serial.c",
       "po_hi_driver_rasta_spacewire.c",
       "po_hi_driver_rtems_ne2000.c",
       "po_hi_driver_sockets.c",
       "po_hi_driver_stardundee.c",
       "po_hi_driver_usbbrick_spacewire.c",
       "po_hi_driver_xc4v_fpga.c",
       "po_hi_giop.c",
       "po_hi_gprof_rtems_leon.c",
       "po_hi_lua.c",
       --  "po_hi_monitor.c",
       "po_hi_simulink.c",
       "po_hi_storage.c",
       "spwrouter_custom_config.c",
       "star_dundee_api.c",
       "trace_manager.c",
       "um_threads.c",
       "cheddar_schedule.cc",
       "remote_configuration.cc",
       "trace_manager.cc");

end @_CAPITALIZE:Name_@_Zynq_RTEMS;
