@@-- The following tags are available in this template:
@@--
@@-- @_Name_@            : Partition name (usually the name of the binary)
@@-- @_Threads_@         : Code generated for the threads
@@-- @_Thread_Names_@    : Tag: list of thread names
@@-- @_Node_Name_@       : Name of the node containing this partition
@@-- @_Blocks_@          : Code generated for protected functions
@@-- @_Block_Names@      : Vector Tag: list of block (user functions) names
@@-- @_Block_Languages_@ :   |_ Corresponding implementation language
@@-- @_Block_Instance_Of_@:  |_ Name of parent function (if instance)
@@-- @_Coverage_@        : True if user requested code coverage enable
@@-- @_Package_Name_@    : AADL Package name for the target (e.g. ocarina_porocessors_x86)
@@-- @_CPU_Name_@        : CPU Name (e.g. x86_linux)
@@-- @_CPU_Platform_@    : AADL CPU_Platform (e.g. PLATFORM_NATIVE)
@@-- @_CPU_Classifier_@  : AADL CPU Classifier (e.g. ocarina_processors_x86::x86.linux)
@@-- @_CPU_Family_@      : e.g. gr740 or x86
@@-- @_CPU_Instance_@    : e.g. rtems51_posix or linux
@@-- @_VP_Name_@         : Virtual processor name on which the partition is bounded
@@-- @_VP_Platform_@     : Virtual processor platform (e.g. PLATFORM_AIR)
@@-- @_VP_Classifier_@   : Virtual processor classifier
@@-- @_Ada_Runtime_@     : Set if CPU_Platform = PLATFORM_GNAT_RUNTIME
@@-- @_Bound_Functions_@ : List of user functions from Interface view
@@-- @_Thread_Src_Name_@ : Vector tag : connection thread name (source)
@@-- @_Thread_Dst_Name_@ : Vector tag : connection thread name (dest)
@@-- @_Thread_Src_Port_@ : Vector tag : connection port name (source)
@@-- @_Thread_Dst_Port_@ : Vector tag : connection port name (dest)
@@-- @_In_Port_Names_@        : Vector tag: input ports of the partition
@@-- @_In_Port_Thread_Name_@  :     |_ corresponding thread inside the partition
@@-- @_In_Port_Type_Name_@    :     |_ corresponding parameter type name (optional)
@@-- @_Out_Port_Names_@       : Vector tag: output ports of the partition
@@-- @_Out_Port_Thread_Name_@ :     |_ corresponding thread inside the partition
@@-- @_Out_Port_Type_Name_@   :     |_ corresponding parameter type name (optional)
--  Node name          : @_Name_@
--  Execution platform : @_CPU_Platform_@
@@-- Not all systems use Ada so we must not always include Ada dataview folder
@@TABLE@@
@@IF@@ @_LOWER:Block_Languages_@ = sdl or @_LOWER:Block_Languages_@ = ada
@@SET@@ Need_Ada = TRUE
@@END_IF@@
@@END_TABLE@@
library project @_CAPITALIZE:Name_@_Simulator is

   for Library_Name use "@_LOWER:Name_@";
   for Library_Dir use "../../simulation";
   for Library_Kind use "dynamic";
@@IF@@ @_Need_Ada_@
   --  In order to get the libinit and libfinal functions:
   for Library_Standalone use "encapsulated";
   for Library_Options use ("-lrt", "-lm");
   for Interfaces use
     ("@_LOWER:Name_@_simulator_interface.h",
@@TABLE@@
      "@_LOWER:Block_Names_@_vm_if.h",
@@IF@@ @_LOWER:Block_Languages_@ = sdl or @_LOWER:Block_Languages_@ = ada
      "@_LOWER:Block_Names_@.ads",
@@END_IF@@
@@END_TABLE@@
      "adaasn1rtl.ads");
@@END_IF@@

   type Build_Type is ("Debug", "Release");
   Build : Build_Type := external ("CFG", "Debug");

   --  following to be updated with all relevant source dirs
   for Source_Dirs use (
@@IF@@ @_VP_Name_@ = "" and (@_In_Port_Names'Length_@ > 0 or @_Out_Port_Names'Length_@ > 0)
@@-- Detect distributed systems (no virtual processor) - add DriversConfig folder
       "../DriversConfig",
@@END_IF@@ 
       "../../dataview/C",
@@IF@@ @_Need_Ada_@ = TRUE
       "../../dataview/Ada",
@@END_IF@@
@@TABLE@@
@@IF@@ @_LOWER:Block_Languages_@ = sdl
       "../../@_LOWER:Block_Names_@/SDL/code",
       "../../@_LOWER:Block_Names_@/SDL/wrappers",
@@ELSE@@
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/src",
       "../../@_LOWER:Block_Names_@/@_Block_Languages_@/wrappers",
@@END_IF@@
@@--  CPP Instances: Add the folder of the parent function (in C++)
@@IF@@ @_EXIST:Block_Instance_Of_@ and @_Block_Languages_@ = CPP
       "../../@_LOWER:Block_Instance_Of_@/@_Block_Languages_@/src",
@@END_IF@@
@@END_TABLE@@
        "@_LOWER:Name_@_simu")
        & external_as_list("EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("@_UPPER:Name_@_EXTERNAL_SOURCE_PATH", ":")
        & external_as_list("ADA_INCLUDE_PATH", ":");

   for Object_Dir use "@_LOWER:Name_@_simu_obj";
   -- for Exec_Dir   use "../../binaries";

@@IF@@ @_Need_Ada_@ = TRUE
   for Languages use ("Ada", "C", "C++");
@@ELSE@@
   for Languages use ("C", "C++");
@@END_IF@@

   --  for Main use ("main.c");

   package Naming is
       for Body_Suffix ("C++") use ".cc";
   end Naming;

   package Compiler is
      case Build is
         when "Release" =>
            for Default_Switches ("C") use
               ("-g",
                "-O2",
                "-DTARGET=native",
                "-DPOSIX",
                "-D_POSIX_SOURCE",
                "-D_GNU_SOURCE",
                "-Wall",
                "-Wextra",
                "-fdiagnostics-show-option",
                "-Wcast-align",
                "-Wswitch")
                & external_as_list("@_UPPER:Name_@_USER_CFLAGS", " ")
                & external_as_list("USER_CFLAGS", " ");
         when "Debug" =>
            for Default_Switches ("C") use
               ("-g",
                "-fPIC",
                "-DTARGET=native",
                "-DPOSIX",
                "-D_POSIX_SOURCE",
                "-D_GNU_SOURCE",
                "-Wall",
                "-Wextra",
                "-fdiagnostics-show-option",
                "-Wcast-align",
                "-Wswitch")
                & external_as_list("@_UPPER:Name_@_USER_CFLAGS", " ")
                & external_as_list("USER_CFLAGS", " ");
      end case;
   end Compiler;
end @_CAPITALIZE:Name_@_Simulator;
