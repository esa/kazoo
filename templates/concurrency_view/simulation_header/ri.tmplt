@@-- The following tags are available in this template:
@@--
@@-- @_Name_@                : The name of the interface
@@-- @_Direction_@           : "PI" or "RI"
@@-- @_Kind_@                : The RCM Kind
@@-- @_Parent_Function_@     : The name of the function
@@-- @_Partition_Name_@         : Partition name for parent function
@@-- @_Param_Names_@         : List of parameter names
@@-- @_Param_Types_@         :   |_ Corresponding parameter types
@@-- @_Param_Directions_@    :   |_ Corresponding direction
@@-- @_Remote_Function_Names_@  : List of callees
@@-- @_Remote_Interface_Names_@ :   |_ callee's interface name
@@-- @_Calling_Threads_@        : Calling threads of the containing block
// Required interface @_Name_@ in function @_Parent_Function_@
// This RI is connected to: @_Remote_Function_Names_@
@@IF@@ @_Param_Names'Length_@ = 0
typedef void (*RI_@_LOWER:Parent_Function_@_@_LOWER:Name_@_t)(void);
@@ELSE@@
typedef void (*RI_@_LOWER:Parent_Function_@_@_LOWER:Name_@_t)
@@INLINE(        \()(,\n         )(\);\n)@@
   @@TABLE@@
      @@IF@@ @_Param_Directions_@ = "PARAM_IN"
         const char *IN_buf_@_LOWER:Param_Names_@, size_t size_IN_buf_@_LOWER:Param_Names_@
      @@ELSE@@
         char *OUT_buf_@_LOWER:Param_Names_@, size_t *size_OUT_buf_@_LOWER:Param_Names_@
      @@END_IF@@
   @@END_TABLE@@
@@END_INLINE@@
@@END_IF@@
// Declaation of the function called by invoke_ri when user invokes the RI:
@@IF@@ @_Param_Names'Length_@ = 0
void vm_@_LOWER:Parent_Function_@_@_LOWER:Name_@(void);
@@ELSE@@
void vm_@_LOWER:Parent_Function_@_@_LOWER:Name_@
@@INLINE(        \()(,\n         )(\);\n)@@
   @@TABLE@@
      @@IF@@ @_Param_Directions_@ = "PARAM_IN"
         const char *IN_buf_@_LOWER:Param_Names_@, size_t size_IN_buf_@_LOWER:Param_Names_@
      @@ELSE@@
         char *OUT_buf_@_LOWER:Param_Names_@, size_t *size_OUT_buf_@_LOWER:Param_Names_@
      @@END_IF@@
   @@END_TABLE@@
@@END_INLINE@@
@@END_IF@@
// the simulator must register a callback function for the RI using this interface:
void register_@_LOWER:Parent_Function_@_@_LOWER:Name_@ (RI_@_LOWER:Parent_Function_@_@_LOWER:Name_@_t);
RI_@_LOWER:Parent_Function_@_@_LOWER:Name_@_t  sim_@_LOWER:Parent_Function_@_@_LOWER:Name_@ = NULL;
