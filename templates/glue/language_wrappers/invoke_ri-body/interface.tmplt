@@-- The following tags are available in this template:
@@--
@@-- @_Name_@                   : The name of the interface
@@-- @_Direction_@              : "PI" or "RI"
@@-- @_Kind_@                   : The RCM Kind
@@-- @_Parent_Function_@        : The name of the function
@@-- @_Language_@               : The implementation language of the function
@@-- @_Property_Names_@         : All AADL properties (names) associated to the function
@@-- @_Property_Values_@        : ... and corresponding values
@@-- @_Param_Names_@            : List of parameter names
@@-- @_Param_Types_@            :   |_ Corresponding parameter types
@@-- @_Param_Directions_@       :   |_ Corresponding direction
@@-- @_Param_Encodings_@        :   |_ Corresponding encoding (Default, Native, UPER, ACN)
@@-- @_Remote_Function_Names_@  : Vector tag listing the connected interface(s)
@@-- @_Remote_Interface_Names_@ :   |_ Corresponding interface name
@@-- note, there are more tags, see in taste-interface_view.adb, in To_Template(Taste_Interface)
@@IF@@ @_EXIST:Param_Names_@
void @_LOWER:Parent_Function_@_RI_@_Name_@
@@INLINE(      \()(,\n       )(\)\n)@@
   @@TABLE@@
      @@IF@@ @_Param_Directions_@ = "PARAM_IN"
         const asn1Scc@_REPLACE_ALL((-)/_):Param_Types_@ *IN_@_LOWER:Param_Names_@
      @@ELSE@@
         asn1Scc@_REPLACE_ALL((-)/_):Param_Types_@ *OUT_@_LOWER:Param_Names_@
      @@END_IF@@
   @@END_TABLE@@
@@END_INLINE@@
@@ELSE@@
void @_LOWER:Parent_Function_@_RI_@_Name_@(void)
@@END_IF@@
{
   // Check that we are not in the startup transition
   if (2 != @_LOWER:Parent_Function_@_initialized) {
      #ifdef __unix__
         puts("A call to @_LOWER:Parent_Function_@_RI_@_Name_@ was made during system startup.");
         puts("This is not allowed because the system is not yet fully initialized. Please fix your code/models");
      #endif
      // crash the application
      abort();
   }

   #ifdef __unix__
      // Log MSC data on Linux when environment variable is set
      static int innerMsc = -1;
      if (-1 == innerMsc)
         innerMsc = (NULL != getenv("TASTE_INNER_MSC"))?1:0;
      if (1 == innerMsc) {
         long long msc_time = getTimeInMilliseconds();
      @@TABLE'TERSE@@
         @@IF@@ @_Param_Directions_@ = PARAM_IN
         PrintASN1@_REPLACE_ALL(-/_):Param_Types_@ ("INNERDATA: @_LOWER:Name_@::@_REPLACE_ALL(-/_):Param_Types_@::@_LOWER:Param_Names_@", IN_@_LOWER:Param_Names_@);
         @@END_IF@@
      @@END_TABLE@@
         puts(""); // add newline
@@-- Had to comment the line below, because we miss the destination function (in place of gnc)
@@-- When we have multicast me need to to emit the line several times (and need to add support)
         @@TABLE@@
         // Log message to @_Remote_Function_Names_@ (corresponding PI: @_Remote_Interface_Names_@)
         printf ("INNER: @_LOWER:Parent_Function_@,@_LOWER:Remote_Function_Names_@,@_LOWER:Name_@,%lld\n", msc_time);
         @@END_TABLE@@
         fflush(stdout);
      }
   #endif
@@TABLE'TERSE@@
@@IF@@ @_Param_Directions_@ = PARAM_IN
   // Encode parameter @_Param_Names_@
  @@IF@@ @_Param_Encodings_@ = NATIVE
   static asn1Scc@_REPLACE_ALL(-/_):Param_Types_@ IN_buf_@_LOWER:Param_Names_@;
  @@ELSIF@@ @_Param_Encodings_@ = UPER
   static char IN_buf_@_LOWER:Param_Names_@[asn1Scc@_REPLACE_ALL(-/_):Param_Types_@_REQUIRED_BYTES_FOR_ENCODING] = {0};
  @@ELSIF@@ @_Param_Encodings_@ = ACN
   static char IN_buf_@_LOWER:Param_Names_@[asn1Scc@_REPLACE_ALL(-/_):Param_Types_@_REQUIRED_BYTES_FOR_ACN_ENCODING] = {0};
  @@END_IF@@
   int size_IN_buf_@_LOWER:Param_Names_@ =
      Encode_@_Param_Encodings_@_@_REPLACE_ALL(-/_):Param_Types_@
        ((void *)&IN_buf_@_LOWER:Param_Names_@,
  @@IF@@ @_Param_Encodings_@ = NATIVE
          sizeof(asn1Scc@_REPLACE_ALL(-/_):Param_Types_@),
  @@ELSIF@@ @_Param_Encodings_@ = UPER
          asn1Scc@_REPLACE_ALL(-/_):Param_Types_@_REQUIRED_BYTES_FOR_ENCODING,
  @@ELSIF@@ @_Param_Encodings_@ = ACN
          asn1Scc@_REPLACE_ALL(-/_):Param_Types_@_REQUIRED_BYTES_FOR_ACN_ENCODING,
  @@END_IF@@
          (asn1Scc@_REPLACE_ALL(-/_):Param_Types_@ *)IN_@_LOWER:Param_Names_@);
   if (-1 == size_IN_buf_@_LOWER:Param_Names_@) {
      #ifdef __unix__
         puts ("[ERROR] ASN.1 Encoding failed in @_LOWER:Parent_Function_@_RI_@_Name_@, parameter @_Param_Names_@");
      #endif
        /* Crash the application due to message loss */
        abort();
   }
@@END_IF@@
@@END_TABLE@@

@@TABLE'TERSE@@
@@IF@@ @_Param_Directions_@ = PARAM_OUT
   // Buffer for decoding parameter @_Param_Names_@
  @@IF@@ @_Param_Encodings_@ = NATIVE
   static asn1Scc@_REPLACE_ALL(-/_):Param_Types_@ OUT_buf_@_LOWER:Param_Names_@;
  @@ELSIF@@ @_Param_Encodings_@ = UPER
   static char OUT_buf_@_LOWER:Param_Names_@[asn1Scc@_REPLACE_ALL(-/_):Param_Types_@_REQUIRED_BYTES_FOR_ENCODING];
  @@ELSIF@@ @_Param_Encodings_@ = ACN
   static char OUT_buf_@_LOWER:Param_Names_@[asn1Scc@_REPLACE_ALL(-/_):Param_Types_@_REQUIRED_BYTES_FOR_ACN_ENCODING];
  @@END_IF@@
   size_t      size_OUT_buf_@_LOWER:Param_Names_@ = 0;
@@END_IF@@
@@END_TABLE@@

   // Call Middleware interface
@@IF@@ @_Param_Names'Length_@ = 0
   extern void vm_@_LOWER:Parent_Function_@_@_LOWER:Name_@(void);
   vm_@_LOWER:Parent_Function_@_@_LOWER:Name_@();
@@ELSE@@
   extern void vm_@_LOWER:Parent_Function_@_@_LOWER:Name_@
@@INLINE(     \()(,\n      )(\);\n)@@
   @@TABLE@@
      @@IF@@ @_Param_Directions_@ = "PARAM_IN"
         void *, size_t
      @@ELSE@@
         void *, size_t *
      @@END_IF@@
   @@END_TABLE@@
@@END_INLINE@@
   vm_@_LOWER:Parent_Function_@_@_LOWER:Name_@
@@INLINE(     \()(,\n      )(\);\n)@@
   @@TABLE@@
      @@IF@@ @_Param_Directions_@ = "PARAM_IN"
         (void*)IN_buf_@_LOWER:Param_Names_@, (size_t)size_IN_buf_@_LOWER:Param_Names_@
      @@ELSE@@
         &OUT_buf_@_LOWER:Param_Names_@, &size_OUT_buf_@_LOWER:Param_Names_@
      @@END_IF@@
   @@END_TABLE@@
@@END_INLINE@@
@@END_IF@@

@@TABLE'TERSE@@
@@IF@@ @_Param_Directions_@ = PARAM_OUT
   // Decode parameter @_Param_Names_@
   if (0 != Decode_@_Param_Encodings_@_@_REPLACE_ALL(-/_):Param_Types_@
              (OUT_@_LOWER:Param_Names_@, &OUT_buf_@_LOWER:Param_Names_@, size_OUT_buf_@_LOWER:Param_Names_@)) {
#ifdef __unix__
      puts ("[ERROR] ASN.1 Decoding failed in @_LOWER:Parent_Function_@_RI_@_Name_@, parameter @_Param_Names_@");
#endif
      return;
  }
@@END_IF@@
@@END_TABLE@@
}
