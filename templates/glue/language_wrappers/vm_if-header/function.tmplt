@@-- The following tags are available in this template:
@@--
@@-- @_Name_@                : The name of the function
@@-- @_Language_@            : The implementation language
@@-- @_List_Of_PIs_@         : List of all Provided Interfaces (just names)
@@-- @_List_Of_RIs_@         : List of all Required Interfaces (just names)
@@-- @_List_Of_Sync_PIs_@    : List of synchronous Provided Interfaces
@@-- @_List_Of_Sync_RIs_@    : List of synchronous Required Interfaces
@@-- @_Sync_RIs_Parent_@     : ... and corresponding Parent function name
@@-- @_List_Of_ASync_PIs_@   : List of asynchronous Provided Interfaces
@@-- @_List_Of_ASync_RIs_@   : List of asynchronous Required Interfaces
@@-- @_Async_RIs_Parent_@    : ... and corresponding Parent function name
@@-- @_ASN1_Modules_@        : List of ASN.1 Modules names
@@-- @_ASN1_Files_@          : List of ASN.1 Files with path
@@-- @_Timers_@              : List of timers (just names)
@@-- @_PIs_Have_Params_@     : Flag, True if at least one PI has an ASN.1 parameter
@@-- @_RIs_Have_Params_@     : Flag, True if at least one RI has an ASN.1 parameter
@@-- @_Has_Context_@         : Flag, True if there are context parameters
@@-- @_CP_Names_@            : List of Context Parameter names
@@-- @_CP_Types_@            : List of Context Parameter types
@@-- @_Provided_Interfaces_@ : From template: Provided interfaces with params
@@-- @_Required_Interfaces_@ : From template: Required interfaces with params
@@-- @_Property_Names_@      : List of User-defined properties (names)
@@-- @_Property_Values_@     : List of User-defined properties (values)
@@-- @_Is_Type_@             : Flag, True if function is a component type
@@-- @_Instance_Of_@         : Optional name of component type
/* Header file for function @_Name_@ in @_Language_@ language
 * Generated by TASTE on @_NOW_@
 * Context Parameters present : @_YES_NO:Has_Context_@
 * Provided interfaces : @_List_Of_PIs_@
 * Required interfaces : @_List_Of_RIs_@
 * User-defined properties for this function:
@@TABLE@@
  *  |_ @_Property_Names_@ = @_Property_Values_@
@@END_TABLE@@
 * DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
 */

/* The purpose of this file is to provide a wrapper around the user code,
 * with a single interface that is independent of the implementation language
 * of the function. The parameters of each PI are blackboxes encoded
 * in the form specified in the interface view (Native, uPER, or ACN)
*/

#pragma once
@@IF@@ @_Language_@ /= SIMULINK
#ifdef __unix__
   #include <stdlib.h>
   #include <stdio.h>
#else
   typedef unsigned size_t;
#endif

#ifdef __cplusplus
extern "C" {
#endif

@@IF@@ @_Language_@ = C or @_Language_@ = CPP or @_Language_@ = GUI
#include "@_LOWER:Name_@.h"
@@ELSIF@@ @_Language_@ = RTDS
#include "glue_@_LOWER:Name_@.h"
@@ELSIF@@ @_Language_@ = MicroPython
#include "@_LOWER:Name_@_mpy_bindings.h"
@@END_IF@@

// Function initialization - calls user startup code of all dependent functions
void init_@_LOWER:Name_@(void);

@@IF@@ @_Language_@ = "Ada" or @_Language_@ = "QGenAda"
extern void adainit(void);
@@END_IF@@

@@IF@@ @_EXIST:Provided_Interfaces_@ and @_Language_@ /= "Blackbox_C"
/* Provided interfaces */
@@TABLE@@
@_Provided_Interfaces_@
@@END_TABLE@@
@@END_IF@@

@@IF@@ @_EXIST:Required_Interfaces_@
/* Required interfaces */
@@TABLE@@
@_Required_Interfaces_@
@@END_TABLE@@
@@END_IF@@

#ifdef __cplusplus
}
#endif
@@ELSE@@  @@-- Language = SIMULINK: just include DMT's header and declare initialization variable
@@TABLE@@
// Include Simulink interface (generated by DMT)
#include "@_List_Of_Sync_PIs_@_SIMULINK.Simulink.h"
@@END_TABLE@@
// DMT does not generate the global @_Name_@_initialized variable: do it here
unsigned @_LOWER:Name_@_initialized = 0;
@@END_IF@@
