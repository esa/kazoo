@@-- The following tags are available in this template:
@@--
@@-- @_Name_@                : The name of the function
@@-- @_Language_@            : The implementation language
@@-- @_List_Of_PIs_@         : List of all Provided Interfaces (just names)
@@-- @_List_Of_RIs_@         : List of all Required Interfaces (just names)
@@-- @_List_Of_Sync_PIs@     : List of synchronous Provided Interfaces
@@-- @_List_Of_Sync_RIs@     : List of synchronous Required Interfaces
@@-- @_List_Of_ASync_PIs@    : List of asynchronous Provided Interfaces
@@-- @_List_Of_ASync_RIs@    : List of asynchronous Required Interfaces
@@-- @_ASN1_Modules_@        : List of ASN.1 Modules names
@@-- @_ASN1_Files_@          : List of ASN.1 Files with path
@@-- @_Timers_@              : List of timers (just names)
@@-- @_Has_Context_@         : Flag, True if there are context parameters
@@-- @_CP_Names_@            : List of Context Parameter names
@@-- @_CP_Types_@            : List of Context Parameter types
@@-- @_Provided_Interfaces_@ : From template: Provided interfaces with params
@@-- @_Required_Interfaces_@ : From template: Required interfaces with params
@@-- @_Property_Names_@      : List of User-defined properties (names)
@@-- @_Property_Values_@     : List of User-defined properties (values)
@@-- @_Is_Type_@             : Flag, True if function is a component type
@@-- @_Instance_Of_@         : Optional name of component type
--  Ada Function Type - Generated by TASTE on @_NOW_@ - DO NOT EDIT THIS FILE
--  Context Parameters present : @_YES_NO:Has_Context_@
--  Provided interfaces : @_List_Of_PIs_@
--  Required interfaces : @_List_Of_RIs_@
--  User-defined properties for this function:
@@TABLE@@
--    |_ @_Property_Names_@ = @_Property_Values_@
@@END_TABLE@@

@@TABLE'ALIGN_ON("use")@@
with @_CAPITALIZE:ASN1_Modules_@; use @_CAPITALIZE:ASN1_Modules_@;
@@END_TABLE@@;

@@IF@@ @_Has_Context_@
with Context_@_CAPITALIZE:Name_@; use Context_@_CAPITALIZE:Name_@;
@@END_IF@@
with @_CAPITALIZE:Instance_Of_@;

package @_CAPITALIZE:Name_@ is

   --  ------------------------------ Required interfaces hooks in C
   --  -------------------------------------------------------------

   @_Required_Interfaces'Indent_@

   --  ------------------------------- Generic package instanciation
   --  -------------------------------------------------------------

@@IF@@ @_List_Of_RIs'Length_@ = 0 and @_Timers'Length_@ = 0
   package Instances is new @_CAPITALIZE:Instance_Of_@;
@@ELSE@@
   package Instances is new @_CAPITALIZE:Instance_Of_@
      @@INLINE(     \()(,\n      )(\);)@@
         @@TABLE'ALIGN_ON("=>")@@
            RI_@_CAPITALIZE:List_Of_RIs_@ => RI_@_CAPITALIZE:List_Of_RIs_@       
         @@END_TABLE@@
      @@END_INLINE@@
@@END_IF@@
   use Instances;

   --  --------------- Static context declaration and initialization
   --  -------------------------------------------------------------

   @@IF@@ @_Has_Context_@
   Instance : Instances.Context :=
   @@INLINE(      \()(,\n       )(\);)@@
      @@TABLE'ALIGN_ON("=>")@@
         @_CAPITALIZE:CP_Names_@ => @_CAPITALIZE:Name_@_Ctxt.@_CAPITALIZE:CP_Names_@
      @@END_TABLE@@
   @@END_INLINE@@
   @@ELSE@@
   Instance : Instances.Context;
   @@END_IF@@

   --  ------------------------------ Provided interfaces hooks in C
   --  -------------------------------------------------------------

   @_Provided_Interfaces'Indent_@

@@--  @@TABLE@@
@@--  procedure @_CAPITALIZE:Timers_@
@@--    with Export,
@@--         Convention => C,
@@--         Link_Name  => "@_LOWER:Name_@_PI_@_Timers_@";
@@--  @@END_TABLE@@
end @_CAPITALIZE:Name_@;
