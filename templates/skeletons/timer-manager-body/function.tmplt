@@-- The following tags are available in this template:
@@--
@@-- @_Name_@                : The name of the function
@@-- @_Language_@            : The implementation language
@@-- @_List_Of_PIs_@         : List of all Provided Interfaces (just names)
@@-- @_List_Of_RIs_@         : List of all Required Interfaces (just names)
@@-- @_List_Of_Sync_PIs@     : List of synchronous Provided Interfaces
@@-- @_List_Of_Sync_RIs@     : List of synchronous Required Interfaces
@@-- @_List_Of_ASync_PIs@    : List of asynchronous Provided Interfaces
@@-- @_List_Of_ASync_RIs@    : List of asynchronous Required Interfaces
@@-- @_ASN1_Modules_@        : List of ASN.1 Modules names
@@-- @_ASN1_Files_@          : List of ASN.1 Files with path
@@-- @_Timers_@              : List of timers (just names)
@@-- @_Has_Context_@         : Flag, True if there are context parameters
@@-- @_CP_Names_@            : List of Context Parameter names
@@-- @_CP_Types_@            : List of Context Parameter types
@@-- @_Provided_Interfaces_@ : From template: Provided interfaces with params
@@-- @_Required_Interfaces_@ : From template: Required interfaces with params
@@-- @_Property_Names_@      : List of User-defined properties (names)
@@-- @_Property_Values_@     : List of User-defined properties (values)
@@-- @_Is_Type_@             : Flag, True if function is a component type
@@-- @_Instance_Of_@         : Optional name of component type
// Autogenerated code (from TASTE/Kazoo) : DO NOT EDIT

#include "@_LOWER:Name_@.h"

void @_LOWER:Name_@_startup(void)
{
 // Timer start up (nothing to do)
}

void @_LOWER:Name_@_PI_Tick(void)
{
@@TABLE@@
   if (active == timers[@_Timers_@].state && 0 == -- timers[@_Timers_@].value) {
      @_LOWER:Name_@_RI_@_Timers_@();
      timers[@_Timers_@].state = inactive;
   }

@@END_TABLE@@
}

@@TABLE@@
void @_LOWER:Name_@_PI_SET_@_Timers_@ (asn1SccT_UInt32 *val)
{
   /* Timer value must be multiple of 10 ms */
   assert (0 == (*val % 10));
   timers[@_Timers_@].state = active;
   timers[@_Timers_@].value = *val / 10;
}

void @_LOWER:Name_@_PI_RESET_@_Timers_@ (void)
{
   timers[@_Timers_@].state = inactive;
}

@@END_TABLE@@
