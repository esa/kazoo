@@-- The following tags are available in this template:
@@--
@@-- @_Name_@                : The name of the function
@@-- @_Language_@            : The implementation language
@@-- @_List_Of_PIs_@         : List of all Provided Interfaces (just names)
@@-- @_List_Of_RIs_@         : List of all Required Interfaces (just names)
@@-- @_List_Of_Sync_PIs@     : List of synchronous Provided Interfaces
@@-- @_List_Of_Sync_RIs@     : List of synchronous Required Interfaces
@@-- @_List_Of_ASync_PIs@    : List of asynchronous Provided Interfaces
@@-- @_List_Of_ASync_RIs@    : List of asynchronous Required Interfaces
@@-- @_ASN1_Modules_@        : List of ASN.1 Modules names
@@-- @_ASN1_Files_@          : List of ASN.1 Files with path
@@-- @_Timers_@              : List of timers (just names)
@@-- @_Has_Context_@         : Flag, True if there are context parameters
@@-- @_CP_Names_@            : List of Context Parameter names
@@-- @_CP_Types_@            : List of Context Parameter types
@@-- @_Provided_Interfaces_@ : From template: Provided interfaces with params
@@-- @_Required_Interfaces_@ : From template: Required interfaces with params
@@-- @_Property_Names_@      : List of User-defined properties (names)
@@-- @_Property_Values_@     : List of User-defined properties (values)
@@-- @_Is_Type_@             : Flag, True if function is a component type
@@-- @_Instance_Of_@         : Optional name of component type
// Autogenerated code (from TASTE/Kazoo) : DO NOT EDIT
#pragma once
#include "dataview-uniq.h"
#include <assert.h>

typedef enum {
   @_Timers_@
} @_LOWER:Name_@_timers;

static struct {
   long long value;
   enum {active, inactive} state;
} timers[@_Timers'Length_@] = {{ .value = 0, .state = inactive }};

void @_LOWER:Name_@_startup(void);
void @_LOWER:Name_@_PI_Tick(void);

@@TABLE@@
void @_LOWER:Name_@_PI_SET_@_Timers_@(asn1SccT_UInt32 *val);
void @_LOWER:Name_@_PI_RESET_@_Timers_@(void);
@@END_TABLE@@

#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
